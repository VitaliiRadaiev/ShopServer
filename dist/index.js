"use strict";
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
exports.app = exports.appContainer = exports.appBindings = void 0;
const inversify_1 = require("inversify");
const app_1 = require("./app");
const types_1 = require("./types");
const prisma_service_1 = require("./database/prisma.service");
const logger_service_1 = require("./logger/logger.service");
const exeption_filter_1 = require("./errors/exeption.filter");
const config_service_1 = require("./config/config.service");
const users_controller_1 = require("./users/users.controller");
const users_services_1 = require("./users/users.services");
const basket_controller_1 = require("./basket/basket.controller");
const basket_services_1 = require("./basket/basket.services");
const productCards_controller_1 = require("./productCards/productCards.controller");
const productCards_services_1 = require("./productCards/productCards.services");
const categories_controller_1 = require("./categories/categories.controller");
const categories_services_1 = require("./categories/categories.services");
const wishList_controller_1 = require("./wishList/wishList.controller");
const wishList_services_1 = require("./wishList/wishList.services");
const lastViewedProducts_controller_1 = require("./lastViewedProducts/lastViewedProducts.controller");
const lastViewedProducts_services_1 = require("./lastViewedProducts/lastViewedProducts.services");
const productComments_controller_1 = require("./productComments/productComments.controller");
const productComments_services_1 = require("./productComments/productComments.services");
const filters_controller_1 = require("./filters/filters.controller");
const filters_services_1 = require("./filters/filters.services");
const history_controller_1 = require("./history/history.controller");
const history_services_1 = require("./history/history.services");
exports.appBindings = new inversify_1.ContainerModule((bind) => {
    bind(types_1.TYPES.Application).to(app_1.App);
    bind(types_1.TYPES.ExeptionFilter).to(exeption_filter_1.ExeptionFilter).inRequestScope();
    bind(types_1.TYPES.ILogger).to(logger_service_1.LoggerService).inRequestScope();
    bind(types_1.TYPES.PrismaService).to(prisma_service_1.PrismaService).inRequestScope();
    bind(types_1.TYPES.ConfigService).to(config_service_1.ConfigService).inRequestScope();
    bind(types_1.TYPES.UsersController).to(users_controller_1.UsersController).inRequestScope();
    bind(types_1.TYPES.UsersServices).to(users_services_1.UsersServices).inRequestScope();
    bind(types_1.TYPES.BasketController).to(basket_controller_1.BasketController).inRequestScope();
    bind(types_1.TYPES.BasketServices).to(basket_services_1.BasketServices).inRequestScope();
    bind(types_1.TYPES.ProductCardsController).to(productCards_controller_1.ProductCardsController).inRequestScope();
    bind(types_1.TYPES.ProductCardsServices).to(productCards_services_1.ProductCardsServices).inRequestScope();
    bind(types_1.TYPES.CategoriesController).to(categories_controller_1.CategoriesController).inRequestScope();
    bind(types_1.TYPES.CategoriesServices).to(categories_services_1.CategoriesServices).inRequestScope();
    bind(types_1.TYPES.WishListController).to(wishList_controller_1.WishListController).inRequestScope();
    bind(types_1.TYPES.WishListServices).to(wishList_services_1.WishListServices).inRequestScope();
    bind(types_1.TYPES.LastViewedProductsController).to(lastViewedProducts_controller_1.LastViewedProductsController).inRequestScope();
    bind(types_1.TYPES.LastViewedProductsServices).to(lastViewedProducts_services_1.LastViewedProductsServices).inRequestScope();
    bind(types_1.TYPES.ProductCommentsController).to(productComments_controller_1.ProductCommentsController).inRequestScope();
    bind(types_1.TYPES.ProductCommentsServices).to(productComments_services_1.ProductCommentsServices).inRequestScope();
    bind(types_1.TYPES.FiltersController).to(filters_controller_1.FiltersController).inRequestScope();
    bind(types_1.TYPES.FiltersServices).to(filters_services_1.FiltersServices).inRequestScope();
    bind(types_1.TYPES.HistoryController).to(history_controller_1.HistoryController).inRequestScope();
    bind(types_1.TYPES.HistoryServices).to(history_services_1.HistoryServices).inRequestScope();
});
function bootstrap() {
    const appContainer = new inversify_1.Container();
    appContainer.load(exports.appBindings);
    const app = appContainer.get(types_1.TYPES.Application);
    app.init();
    return { appContainer, app };
}
_a = bootstrap(), exports.appContainer = _a.appContainer, exports.app = _a.app;
//# sourceMappingURL=index.js.map